
stages:
  - lint
  - build
  - test
  - release
  - deploy

variables:
  BRANCH_IMG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

default:
  image: docker:20.10.5
  services:
    - docker:20.10.5-dind
  before_script:
    - echo "$CI_DEPLOY_TOKEN" | docker login --username $CI_TOKEN_USER --password-stdin $CI_REGISTRY

python-lint:
  stage: lint
  image: python:3.8.8-slim-buster
  services: []
  before_script: []
  script:
    - pip install flake8==3.9.0 black==20.8b1 isort==5.8.0 mypy==0.812 pydantic==1.8.1
    - chmod +x ./scripts/lint
    - ./scripts/lint
  except:
    - tags

dockerize:
  stage: build
  script:
    - docker build --target=dev --tag $BRANCH_IMG-dev .
    - docker push $BRANCH_IMG-dev
  except:
    - tags

test:
  stage: test
  script:
    - docker pull $BRANCH_IMG-dev
    - docker run $BRANCH_IMG-dev sh ./scripts/test
  except:
    - tags

release-image:
  stage: release
  script:
    - >
      docker build --target=release
      --tag $CI_REGISTRY_IMAGE:latest
      --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

deploy-to-ecs:
  stage: deploy
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest
  services: []
  before_script: []
  script:
    - aws ecs update-service --cluster $CI_AWS_ECS_CLUSTER --service $CI_AWS_ECS_SERVICE --force-new-deployment
  only:
    - tags

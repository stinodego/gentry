image: docker:19.03
services:
  - docker:19.03-dind

stages:
  - build
  - test
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  IMG_BASE: alpine
  BRANCH_IMG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  RELEASE_IMG: $CI_REGISTRY_IMAGE:latest

before_script:
  - echo "$CI_DEPLOY_TOKEN" | docker login --username $CI_TOKEN_USER --password-stdin $CI_REGISTRY

dockerize:
  stage: build
  script:
    # Base
    - docker pull $BRANCH_IMG-base || true
    - >
      docker build
      --cache-from $BRANCH_IMG-base
      --target=base --tag $BRANCH_IMG-base
      --file docker/Dockerfile.$IMG_BASE .
    - docker push $BRANCH_IMG-base
    # Build
    - docker pull $BRANCH_IMG-build || true
    - >
      docker build
      --cache-from $BRANCH_IMG-build
      --target=build --tag $BRANCH_IMG-build
      --file docker/Dockerfile.$IMG_BASE .
    - docker push $BRANCH_IMG-build
    # Dev
    - docker pull $BRANCH_IMG-dev || true
    - >
      docker build
      --cache-from $BRANCH_IMG-dev
      --target=dev --tag $BRANCH_IMG-dev
      --file docker/Dockerfile.$IMG_BASE .
    - docker push $BRANCH_IMG-dev
    # Release
    - >
      docker build
      --cache-from $BRANCH_IMG-dev
      --target=release --tag $BRANCH_IMG
      --file docker/Dockerfile.$IMG_BASE .
    - docker push $BRANCH_IMG

lint:
  stage: test
  script:
    - docker pull $BRANCH_IMG-dev
    - docker run $BRANCH_IMG-dev sh ./scripts/lint

test:
  stage: test
  script:
    - docker pull $BRANCH_IMG-dev
    - docker run $BRANCH_IMG-dev sh ./scripts/test

release-image:
  stage: release
  script:
    - docker pull $BRANCH_IMG
    - docker tag $BRANCH_IMG $RELEASE_IMG
    - docker push $RELEASE_IMG
  only:
    - master

deploy-to-heroku:
  stage: deploy
  variables:
    HEROKU_APP: autopoetry
    HEROKU_REGISTRY: registry.heroku.com
    HEROKU_IMG: $HEROKU_REGISTRY/$HEROKU_APP/web
  script:
    - docker pull $RELEASE_IMG
    - docker tag $RELEASE_IMG $HEROKU_IMG
    - echo "$HEROKU_TOKEN" | docker login --username _ --password-stdin $HEROKU_REGISTRY
    - docker push $HEROKU_IMG
    - apk add --no-cache curl
    - |-
      curl --netrc -X PATCH https://api.heroku.com/apps/$HEROKU_APP/formation \
      --data '{
        "updates": [
          {
            "type": "web",
            "docker_image": "'$(docker inspect $HEROKU_IMG --format={{.Id}})'"
          }
        ]
      }' \
      --header "Content-Type: application/json" \
      --header "Accept: application/vnd.heroku+json; version=3.docker-releases" \
      --header "Authorization: Bearer ${HEROKU_TOKEN}"
  only:
    - master

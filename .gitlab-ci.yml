image: docker:19.03
services:
  - docker:19.03-dind

stages:
  - build
  - qa
  - test
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-images:
  stage: build
  script:
    # - docker pull $CONTAINER_TEST_IMAGE-base || true
    # - docker pull $CONTAINER_TEST_IMAGE-build || true
    - docker pull $CONTAINER_TEST_IMAGE-dev || true
    - docker pull $CONTAINER_TEST_IMAGE || true
    # - docker build --cache-from $CONTAINER_TEST_IMAGE-base -t $CONTAINER_TEST_IMAGE-base --target=base .
    # - docker build --cache-from $CONTAINER_TEST_IMAGE-build -t $CONTAINER_TEST_IMAGE-build --target=build .
    - docker build --cache-from $CONTAINER_TEST_IMAGE-build -t $CONTAINER_TEST_IMAGE-dev --target=dev .
    - docker build --cache-from $CONTAINER_TEST_IMAGE -t $CONTAINER_TEST_IMAGE --target=release .
    # - docker push $CONTAINER_TEST_IMAGE-base
    # - docker push $CONTAINER_TEST_IMAGE-build
    - docker push $CONTAINER_TEST_IMAGE-dev
    - docker push $CONTAINER_TEST_IMAGE

lint:
  stage: qa
  script:
    - docker pull $CONTAINER_TEST_IMAGE-dev
    - docker run $CONTAINER_TEST_IMAGE-dev bash ./scripts/lint.sh

test:
  stage: test
  script:
    - docker pull $CONTAINER_TEST_IMAGE-dev
    - docker run $CONTAINER_TEST_IMAGE-dev bash ./scripts/test.sh

release-image:
  stage: release
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

# deploy:
#   stage: deploy
#   script:
#     - ./deploy.sh
#   only:
#     - master

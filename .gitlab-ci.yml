image: docker:19.03
services:
  - docker:19.03-dind

stages:
  - build
  - qa
  - test
  - release
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"
  BRANCH_IMG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  RELEASE_IMG: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

build-images:
  stage: build
  script:
    - docker pull $BRANCH_IMG-base || true
    - docker pull $BRANCH_IMG-build || true
    - docker pull $BRANCH_IMG-dev || true
    - docker pull $BRANCH_IMG || true
    - >
      docker build
      --cache-from $BRANCH_IMG-base
      --target=base
      --tag $BRANCH_IMG-base .
    - >
      docker build
      --cache-from $BRANCH_IMG-base,$BRANCH_IMG-build
      --target=build
      --tag $BRANCH_IMG-build .
    - >
      docker build
      --cache-from $BRANCH_IMG-base,$BRANCH_IMG-build,$BRANCH_IMG-dev
      --target=dev
      --tag $BRANCH_IMG-dev .
    - >
      docker build
      --cache-from $BRANCH_IMG-base,$BRANCH_IMG-build,$BRANCH_IMG-dev,$BRANCH_IMG
      --target=release
      --tag $BRANCH_IMG .
    - docker push $BRANCH_IMG-base
    - docker push $BRANCH_IMG-build
    - docker push $BRANCH_IMG-dev
    - docker push $BRANCH_IMG

lint:
  stage: qa
  script:
    - docker pull $BRANCH_IMG-dev
    - docker run $BRANCH_IMG-dev bash ./scripts/lint

test:
  stage: test
  script:
    - docker pull $BRANCH_IMG-dev
    - docker run $BRANCH_IMG-dev bash ./scripts/test

release-image:
  stage: release
  script:
    - docker pull $BRANCH_IMG
    - docker tag $BRANCH_IMG $RELEASE_IMG
    - docker push $RELEASE_IMG
  only:
    - master

# deploy:
#   stage: deploy
#   script:
#     - ./deploy.sh
#   only:
#     - master

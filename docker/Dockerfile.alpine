# --- BASE IMAGE WITH GENERAL SETTINGS --- #
FROM python:3.8-alpine AS base

# Nice-to-have optimizations
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on \
    PIP_DEFAULT_TIMEOUT=100 \
# Required settings
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_HOME=/opt/poetry \
    VENV_PATH=/opt/venv

# Set path for using poetry and virtual env
ENV PATH="$VENV_PATH/bin:$POETRY_HOME/bin:$PATH"

# Set port
ENV PORT=8000
EXPOSE $PORT


# --- BUILD IMAGE WITH RUNTIME DEPENDENCIES --- #
FROM base AS build

# Install Poetry
RUN apk add --no-cache curl \
 && curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python \
 && apk del curl \
# Create virtual env (already activated in PATH)
 && python -m venv $VENV_PATH

# Install Python runtime dependencies
WORKDIR /app
COPY pyproject.toml poetry.lock ./
RUN apk add --no-cache build-base \
 && poetry install --no-root --no-dev \
 && apk del build-base

# Install local package (poetry does not support non-editable installs yet)
COPY src/ src/
RUN poetry build && pip install dist/*.whl


# --- DEV IMAGE WITH ADDITIONAL DEPENDENCIES --- #
FROM build as dev

# Install additional dependencies and editable local package
RUN apk add --no-cache build-base \
 && poetry install \
 && apk del build-base

# Copy all tests, scripts, settings, etc.
COPY . .

CMD uvicorn gentry.main:app --host=0.0.0.0 --port=$PORT


# --- MINIMAL RELEASE IMAGE --- #
FROM base as release

# Copy pre-built app and dependencies from build image
COPY --from=build $VENV_PATH $VENV_PATH

# Run as non-root user
ENV USER=docker \
    UID=12345 \
    GID=12345
RUN addgroup --system --gid $GID $USER \
 && adduser \
    --system \
    --disabled-password \
    --no-create-home \
    --gecos "" \
    --ingroup $USER \
    --uid $UID \
    $USER
USER $USER

CMD uvicorn gentry.main:app --host=0.0.0.0 --port=$PORT
